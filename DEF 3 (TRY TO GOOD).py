
# написать поля для крестики нолики

# def draw_boards():
#     print("-------------")
#     for i in range(3):
#         print("|", board[0 + i * 3], "|", board[1 + i * 3], "|", board[2 + i * 3], "|")
#         print("-------------")
#
#
# draw_boards()


# вот что не так что за пиздос почему он не фурычит
# при том что этот код борда разберем так как у меня самому написать не получилось я списал


a = ['pique','arauho','dest','semedo']
other_list = ['asd', 'dks', 'fgh']


def position(arg, last_index=1, mult=10):
    return mult * arg[-last_index]

# print('pre func')
last_a = position(a, mult=2)
last_other_list = position(other_list, 2, mult=100)
print(last_a, last_other_list)
print( position( [1, 3, 4, 6], 3) )

# почему выдает ошибку аж в 21 строке там же нет ошибки (я менял строку нечего не получилось)

#
# Объявление
# Объявляя
# функцию, нужно
# следовать
# определенным
# правилам:
#
# Объявление
# происходит
# с
# помощью
# ключевого
# слова
#
#
# def , за
#
#
# ним
# идёт
# имя
# функции
# и
# круглые
# скобки().
# Аргументы, передаваемые
# в
# функцию, должны
# находится
# в
# круглых
# скобках.Там
# же
# можно
# определить
# их
# значения
# по
# умолчанию, указав
# их
# после
# знака
# равно.
# Перед
# основным
# содержимым
# желательно
# включить
# строку
# документации(docstring), которая
# обычно
# описывает
# назначение
# и
# основные
# принципы
# работы
# функции.
# Тело
# функции
# начинается
# после
# знака
# двоеточия.Важно
# не
# забыть
# об
# отступах.
# Чтобы
# выйти
# из
# функции
# в
# Python, используют
# оператор
# return [значение].Если
# оператор
# опущен, будет
# возвращено
# значение


# пример кода - синтаксиса
# def Имя(аргументы):
#     "Документация"
#     Тело(инструкции)
#     return [значение]

# а где принт такой вопрос и ретурн возвращается только один раз
# а если значений на выходе допустим будет 2 или 5

# так же вопрос а как осуществляется вызов функции в теле кода допустим во второй раз




# tasks

# Напишите функцию sum_range(start, end),
# которая суммирует все целые числа от значения «start» до величины «end» включительно.
# Если пользователь задаст первое число большее чем второе, просто поменяйте их местами.

# def sum_range():
#     a = [2,3,4,5,6,7,8,9]
#     b = [i * 2 for i in range(0,10)]
#     print(b)
#     return b

# def sum_range():


# Напишите функцию Python, которая берет список и возвращает новый список с уникальными элементами первого списка

# a = [1,1,1,5,5,5,6,7,77,777,77,77]


# def unikal():
#     x = []
#     for i in a:
#         if a not in x:
#         x.append(a)
#         print(x)


# def unikal():

 # не чего не получается