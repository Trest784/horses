# дан произвольный  список - представтье его в обратном порядке

list_my = [2,4,6,8]
print(list_my[::-1])
#если честно в этот метод списал, так как сначала начал пересталять местами вот так list_my[-3,0]
# не как не получалось и решил списать и не понял это [::-1] я не понял :: - начал искать не нашел
# что это  :: ???????????????

list_my = [2,4,6,8]
list_my.reverse()
print(list_my)

# стало стыдно что списал и не понял что списал, начал делать заново и нашел этот метод через команды работ со списками
#его и заюзал

# Задача 2
# напишите функцию change(Ist) которая принимает список и меняет его местами первый и последний элемент

# list_fcb = ['pique','suarez']
# change([1,0])
# print(list_fcb)

#решается через def я забил

# задача 3
# функция to_list() принимает неограниченное количество параметров.
# обработайте так что бы на выходе был список элементов

# долго думал над задачей вообще не оч понял но вот что нарешал

laliga = {'sevilla','fcb','atletico'}
a = list(laliga)
print(a)

#  в принципе суть ясна

# задача 4
# николай задумался о поиске «бесполезного» числа на основании списка.
# Суть оного в следующем: он берет произвольный список чисел,
# находит самое большое из них, а затем делит его на длину списка.
# Студент пока не придумал,
# где может пригодиться подобное значение,
# но ищет у вас помощи в реализации такой функции useless(s).

# a = {2,3,5,7,77}
# b = list(a)
# max_number = max(b)
# f = list(max_number) #он не присваивает максимальному числу выраженному через ф значение списка
# s = (list(a)[:4])
# d = f / s
# print(d) #но логика решения верна

#вариант2

list_fire = [2,3,5,7,77]
max(list_fire)
print(max(list_fire))
print(''.join(map(str,list_fire)))
a = sum([2,3,5,7])
print(a)
c = max(list_fire) / a
print(c)

#вот такой дикий изъебон , но проблема в том что 58 стока только дает представления
# что мы вычленили все из списка в числа но не смогли их выразить и как бы следующая строка если представить
# это й = числа из спика  которые мы потом суммируем и 77 делим на них
# это как в условии задачи я даже не понял что это  - такой функции useless(s)

# задача 5
# требуется создать функцию list_sort(list), которая сортирует список по убыванию
#
# list_number = [8,2,60,1,9,4,6]
# list_number.sort()
# print(list_number)
# это по увелечнию

# list_number = [8,2,60,1,9,4,6]
# list_number.sort(reverse=True)
# print(list_number)

# смотрел как используется эта команда так как до этого вообще не знал о ее существование на этой планете


# задача 6
# На входе имеем список строк разной длины.
# Необходимо написать функцию all_eq(lst), которая вернет новый список из строк одинаковой длины.
# Длину итоговой строки определяем исходя из самой большой из них.
# Если конкретная строка короче самой длинной,
# дополнить ее нижними подчеркиваниями с правого края до требуемого количества символов.
# Расположение элементов начального списка не менять

# list_dlina = ["saprtak","verder","cska","MU","atletico"]
# all_eq()
# print(list_dlina)

# Лех изучал  этот all_eq(lst) увидел решения только с def
# и решил отложить так как королевская функция отложена
# а вообще я понял что эта функция сравнения и почему надо использовать def я не понимаю

