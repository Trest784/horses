
# Лех по сколько я вижу все эти замечания и охуеваю над ними, так как их к сожалению не вижу
# я на этом примере одной задачи разберу их через теорию по крайней мере попытаюсь



# a = int(input("enter the number"))
#
# def dislike_6(a):
#     if a == 6:
#         print('true')
#     else: a != 6
#     print('false')
#
# def dislike_6():


# мои коммент на твои коммент и перехожу к теории

# и так ошибки:

# 1ая - 15 строка я занова создаю функцию а не вызываю ее

# 2ая - не задан аргумент, который надо прогнать через инструкцию функции, хотя на мои взгляд он указан в строке 9


# теперь эти вводные постараюсь разобрать через теорию


# начнем с параметров и аргументов:

# параметр - это условие выводимое на консоль, параметр это набор данных которые будут проходит инструкцию функции и будут
# возвращены в общие тело кода

# на данном примере - параметр это a строка 9 def dislike_6(a): (параметр в скобках) он принимает аргумент а
# это строка 7  a = int(input("enter the number"))
# что происходит в 7 и 9 строчке def dislike_6(a): функция принимает аргумент а a = int(input("enter the number")) и начинает
# работать с ним уже в 10 строчке if a == 6: - это начало инструкции
# таким образом в данных 3х строчках ошибок и  нет функция принимает аргумент и берет в работу список

# инструкция

# это метод дейтсивй что необходимо сделать с данными в внутри функции
# в данном случае это условные выражение

#     if a == 6:
#         print('true')
#     else: a != 6
#     print('false')

# здесь ошибок нет


# вызов функции

# вызов функции нужен для того что бы показать что в этом месте нужно применение инструкции

# и так


# a = int(input("enter the number"))
#
# def dislike_6(a):
#     if a == 6:
#         print('true')
#     else: a != 6
#     print('false')
#
# def dislike_6():

# здесь вызов функции не правильный
#
# но
#
# вот пример из теории
#
# def my_fun():
#     print("Как вызвать функцию в Python?")
#
#
# my_fun()  # вызов функции

# что не праивльно - только : - то что они у меня есть а их не должно быть ????????
#
#
# другой способ
#
# вызову присваиваеться переменная, но зачем и в каких случаях?

# def my_fun():
#     x = 22 ** 5
#     return x
#
# # 1. Вызов функции
# my_fun()
# # 2. Вызов функции и присвоение результат переменной
# a = my_fun()
# # 3. Вызов функции и вывод результат в консоль
# print(my_fun())

# таким образом если вариант 1ый не сработал я использую переменную и сделаю вызов через переменную ( но логику не понимаю)


# return

# Оператор return используется в функциях для возвращения данных после выполнения работы самой функции.
# Если функция
# должна обработать какие-то данные и потом вернуть их,
# то для возвращения этих данных необходим этот оператор.

 # вот здесь в нашей задаче мы получили два ответа , как их выгонять через принт или ретурн не понятно

# и так:

# a = int(input("enter the number"))
#
# def dislike_6(a):
#     if a == 6:
#         print('true')
#     else: a != 6
#     print('false')
#
# b = dislike_6(a)
# print(b)

# учитывая что он выдает ответ none
# попробуем ретурн


a = int(input("enter the number"))
#
# def dislike_6(a):
#     if a == 6:
#         return true
#     else: a != 6
#     print('false')
#
# b = dislike_6(a)
# print(b)

# получилось не пойми что

# на основание выше перечисленного считаю правильным этот вариант

# a = int(input("enter the number"))
#
# def dislike_6(a):
#     if a == 6:
#         print('true')
#     else: a != 6
#     print('false')
#
# b = dislike_6(a)
# print(b)




# итог
# два вопроса

# 1.в каких случаях применять return и к какой части инструкции конкретно????????

# 2. когда и зачем вызову функции принуждать переменную?????????????????????????????

