# В настольной игре Скрабл (Scrabble) каждая буква имеет определенную ценность.
# В случае с английским алфавитом очки распределяются так:
#
# A, E, I, O, U, L, N, S, T, R – 1 очко;
# D, G – 2 очка;
# B, C, M, P – 3 очка;
# F, H, V, W, Y – 4 очка;
# K – 5 очков;
# J, X – 8 очков;
# Q, Z – 10 очков.
#
# Напишите программу, которая вычисляет стоимость введенного пользователем слова.
# Будем считать, что на вход подается только одно слово,
# которое содержит либо только английские, либо только русские буквы.
#
# A, E, I, O, U, L, N, S, T, R – 1 очко;
# D, G – 2 очка;
# B, C, M, P – 3 очка;
# F, H, V, W, Y – 4 очка;
# K – 5 очков;
# J, X – 8 очков;
# Q, Z – 10 очков

# через def решение не осили вообще это полная хуйня пока забил












# словари

# задача 1

# Напишите скрипт Python для сортировки (возрастания и убывания) словаря по значению
#
# a = {'a':34,'v':77,'i':89}
# b = a.sorted(a.get())
# # print(b)
# какого хуя все же должно работать - что за пиздец и я не знаю в чем причина , а нука
# не вкруиваю вообще в чем дело

# a = {1:34,142:77,777:89}
# b = a.sorted(a.items())
# print(b)
# почему??? пиздец

# a = {'a':34,'v':77,'i':89}
# b = a.sorted(a.items())
# print(b)

# вот решение
#
# import operator
# d = {1: 2, 3: 4, 4: 3, 2: 1, 0: 0}
# print('Original dictionary : ',d)
# sorted_d = sorted(d.items(), key=operator.itemgetter(0))
# print('Dictionary in ascending order by value : ',sorted_d)
# sorted_d = dict( sorted(d.items(), key=operator.itemgetter(0),reverse=True))
# print('Dictionary in descending order by value : ',sorted_d)

# я бы не доперь тут еще и оператор







# ВНИМАНИЕ !!!!!!! ВНИМАНИЕ !!!!!!!!!!!!!!!!!!!!!!!
#
# ГЛАВНАЯ ВЕЩЬ КОТОРАЯ Я НЕ ПОНИМАЮ
#
# ДОПУСТИМ
#
# sorted(d.items(), key=lambda x: x[1])
#
# зачем это добавлять в список
# (key, val)







# задача 2

# Напишите программу на Python, чтобы получить ключ, значение и элемент в словаре

a = {'a':34,'v':77,'i':89}
d = a.keys()
n = a.values()
print(d,n)


# задача 3

# Напишите программу на Python для создания словаря из двух списков без потери дублирующихся значений
a = {'a':34,'v':77,'i':89}
b = {'d':99,'l':100,'j':12345}
s = a|b
print(s)

a = {'a':34,'v':77,'i':89}
b = {'d':99,'l':100,'j':12345}
a.update(b)
print(a)

# эти два метода работают но интерсано если сделать так :

a = {'a':34,'v':77,'i':89}
b = {'d':99,'l':100,'j':12345}
c = a.update(b)
print(c)
# выдает none но почему

# задача 4

#Напишите программу на Python для печати словаря построчно

a = {'a':34,'v':77,'i':89}
temp = ''
for i in a:
    temp += i
    print(i,temp)

# как по другому вывести в строку не знаю
# end не работает почему так что бы добавить все в единственную строку


# задача 5

# Напишите программу на Python для создания и отображения всех комбинаций букв,
# выбирая каждую букву из разных ключей в словаре
x = {1:'b', 2:'d'}
y = x.get(1)
e = x.get(2)
p = y + e
t = e + y
print(y,e,p,t)

# задача 6
#Напишите программу на Python, чтобы заменить значения словаря их суммой

l = {'t':33, 'e':11}
a = l.get('t')
m = l.get('e')
sum = a + m
print(sum)



#СУПЕР ЗАДАЧА

###ОЧЕНЬ ИНТЕРЕСНО
##ВНИМАНИЕ ВНИМАНИЕ

#Напишите программу на Python для печати словаря в табличном формате

# Я ЛИЧНО ДАЖЕ НЕ ПРЕДСТАВЛЯЮ КАК ЭТО РЕШАЕТСЯ
# я посмотрел решение

# вот списанное решение

my_dict = {'C1':[1,2,3],'C2':[5,6,7],'C3':[9,10,11]}
for row in zip(*([key] + (value) for key, value in sorted(my_dict.items()))):

#  я даже не представляю код просто офигеть решение















